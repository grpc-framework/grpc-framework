/// Please use the following editor setup for this file:
// Tab size=2; Tabs as spaces; Clean up trailing whitepsace
//
// In vim add: au FileType proto setl sw=2 ts=2 expandtab list
//
// Note, the documentation provided here for can be created in
// markdown format plus the use of 'codetabs' are supported. The documentation
// will then be rendered by github.com/openstoreage/libopenstoreage.github.io and
// provided on https://libopenstorage.github.io
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.1
// source: ownership.proto

package ownership

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Access types can be set by owner to have different levels of access to
// a resource.
//
// It is up to the resource to interpret what the types mean and are
// used for.
type Ownership_AccessType int32

const (
	// Read access only and cannot affect the resource.
	Ownership_Read Ownership_AccessType = 0
	// Write access and can affect the resource.
	// This type automatically provides Read access also.
	Ownership_Write Ownership_AccessType = 1
	// Administrator access.
	// This type automatically provides Read and Write access also.
	Ownership_Admin Ownership_AccessType = 2
)

// Enum value maps for Ownership_AccessType.
var (
	Ownership_AccessType_name = map[int32]string{
		0: "Read",
		1: "Write",
		2: "Admin",
	}
	Ownership_AccessType_value = map[string]int32{
		"Read":  0,
		"Write": 1,
		"Admin": 2,
	}
)

func (x Ownership_AccessType) Enum() *Ownership_AccessType {
	p := new(Ownership_AccessType)
	*p = x
	return p
}

func (x Ownership_AccessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Ownership_AccessType) Descriptor() protoreflect.EnumDescriptor {
	return file_ownership_proto_enumTypes[0].Descriptor()
}

func (Ownership_AccessType) Type() protoreflect.EnumType {
	return &file_ownership_proto_enumTypes[0]
}

func (x Ownership_AccessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Ownership_AccessType.Descriptor instead.
func (Ownership_AccessType) EnumDescriptor() ([]byte, []int) {
	return file_ownership_proto_rawDescGZIP(), []int{0, 0}
}

// Ownership information for resource.
// Administrators are users who belong to the group `*`, meaning, every group.
type Ownership struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Username of owner.
	//
	// The storage system uses the username taken from the security authorization
	// token and is saved on this field. Only users with system administration
	// can edit this value.
	Owner string `protobuf:"bytes,1,opt,name=owner,proto3" json:"owner,omitempty"`
	// Permissions to share resource which can be set by the owner.
	//
	// NOTE: To create an "admin" user which has access to any resource set the group value
	// in the token of the user to `*`.
	Acls *Ownership_AccessControl `protobuf:"bytes,2,opt,name=acls,proto3" json:"acls,omitempty"`
}

func (x *Ownership) Reset() {
	*x = Ownership{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ownership_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ownership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ownership) ProtoMessage() {}

func (x *Ownership) ProtoReflect() protoreflect.Message {
	mi := &file_ownership_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ownership.ProtoReflect.Descriptor instead.
func (*Ownership) Descriptor() ([]byte, []int) {
	return file_ownership_proto_rawDescGZIP(), []int{0}
}

func (x *Ownership) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *Ownership) GetAcls() *Ownership_AccessControl {
	if x != nil {
		return x.Acls
	}
	return nil
}

// PublicAccessControl allows assigning public ownership
type Ownership_PublicAccessControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// AccessType declares which level of public access is allowed
	Type Ownership_AccessType `protobuf:"varint,1,opt,name=type,proto3,enum=ownership.Ownership_AccessType" json:"type,omitempty"`
}

func (x *Ownership_PublicAccessControl) Reset() {
	*x = Ownership_PublicAccessControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ownership_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ownership_PublicAccessControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ownership_PublicAccessControl) ProtoMessage() {}

func (x *Ownership_PublicAccessControl) ProtoReflect() protoreflect.Message {
	mi := &file_ownership_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ownership_PublicAccessControl.ProtoReflect.Descriptor instead.
func (*Ownership_PublicAccessControl) Descriptor() ([]byte, []int) {
	return file_ownership_proto_rawDescGZIP(), []int{0, 0}
}

func (x *Ownership_PublicAccessControl) GetType() Ownership_AccessType {
	if x != nil {
		return x.Type
	}
	return Ownership_Read
}

type Ownership_AccessControl struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Group access to resource which must match the group set in the
	// authorization token.
	// Can be set by the owner or the system administrator only.
	// Possible values are:
	// 1. no groups: Means no groups are given access.
	// 2. `["*"]`: All groups are allowed.
	// 3. `["group1", "group2"]`: Only certain groups are allowed. In this example only
	// _group1_ and _group2_ are allowed.
	Groups map[string]Ownership_AccessType `protobuf:"bytes,1,rep,name=groups,proto3" json:"groups,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=ownership.Ownership_AccessType"`
	// Collaborator access to resource gives access to other user.
	// Must be the username (unique id) set in the authorization token.
	// The owner or the administrator can set this value. Possible values are:
	// 1. no collaborators: Means no users are given access.
	// 2. `["*"]`: All users are allowed.
	// 3. `["username1", "username2"]`: Only certain usernames are allowed. In this example only
	// _username1_ and _username2_ are allowed.
	Collaborators map[string]Ownership_AccessType `protobuf:"bytes,2,rep,name=collaborators,proto3" json:"collaborators,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3,enum=ownership.Ownership_AccessType"`
	// Public access to resource may be assigned for access by the public userd
	Public *Ownership_PublicAccessControl `protobuf:"bytes,3,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *Ownership_AccessControl) Reset() {
	*x = Ownership_AccessControl{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ownership_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ownership_AccessControl) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ownership_AccessControl) ProtoMessage() {}

func (x *Ownership_AccessControl) ProtoReflect() protoreflect.Message {
	mi := &file_ownership_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ownership_AccessControl.ProtoReflect.Descriptor instead.
func (*Ownership_AccessControl) Descriptor() ([]byte, []int) {
	return file_ownership_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Ownership_AccessControl) GetGroups() map[string]Ownership_AccessType {
	if x != nil {
		return x.Groups
	}
	return nil
}

func (x *Ownership_AccessControl) GetCollaborators() map[string]Ownership_AccessType {
	if x != nil {
		return x.Collaborators
	}
	return nil
}

func (x *Ownership_AccessControl) GetPublic() *Ownership_PublicAccessControl {
	if x != nil {
		return x.Public
	}
	return nil
}

var File_ownership_proto protoreflect.FileDescriptor

var file_ownership_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x22, 0x8b, 0x05, 0x0a,
	0x09, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72,
	0x12, 0x36, 0x0a, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22,
	0x2e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72,
	0x73, 0x68, 0x69, 0x70, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x52, 0x04, 0x61, 0x63, 0x6c, 0x73, 0x1a, 0x4a, 0x0a, 0x13, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12,
	0x33, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x1a, 0xb5, 0x03, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x12, 0x46, 0x0a, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68,
	0x69, 0x70, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x12, 0x5b,
	0x0a, 0x0d, 0x63, 0x6f, 0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x2e, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x62,
	0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0d, 0x63, 0x6f,
	0x6c, 0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x06, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69,
	0x70, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x1a, 0x5a, 0x0a,
	0x0b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x35,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x61, 0x0a, 0x12, 0x43, 0x6f, 0x6c,
	0x6c, 0x61, 0x62, 0x6f, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x35, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1f, 0x2e, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x2c, 0x0a, 0x0a,
	0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x65,
	0x61, 0x64, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x72, 0x69, 0x74, 0x65, 0x10, 0x01, 0x12,
	0x09, 0x0a, 0x05, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x02, 0x42, 0x17, 0x5a, 0x15, 0x2e, 0x2f,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x68, 0x69, 0x70, 0x3b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73,
	0x68, 0x69, 0x70, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_ownership_proto_rawDescOnce sync.Once
	file_ownership_proto_rawDescData = file_ownership_proto_rawDesc
)

func file_ownership_proto_rawDescGZIP() []byte {
	file_ownership_proto_rawDescOnce.Do(func() {
		file_ownership_proto_rawDescData = protoimpl.X.CompressGZIP(file_ownership_proto_rawDescData)
	})
	return file_ownership_proto_rawDescData
}

var file_ownership_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ownership_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_ownership_proto_goTypes = []interface{}{
	(Ownership_AccessType)(0),             // 0: ownership.Ownership.AccessType
	(*Ownership)(nil),                     // 1: ownership.Ownership
	(*Ownership_PublicAccessControl)(nil), // 2: ownership.Ownership.PublicAccessControl
	(*Ownership_AccessControl)(nil),       // 3: ownership.Ownership.AccessControl
	nil,                                   // 4: ownership.Ownership.AccessControl.GroupsEntry
	nil,                                   // 5: ownership.Ownership.AccessControl.CollaboratorsEntry
}
var file_ownership_proto_depIdxs = []int32{
	3, // 0: ownership.Ownership.acls:type_name -> ownership.Ownership.AccessControl
	0, // 1: ownership.Ownership.PublicAccessControl.type:type_name -> ownership.Ownership.AccessType
	4, // 2: ownership.Ownership.AccessControl.groups:type_name -> ownership.Ownership.AccessControl.GroupsEntry
	5, // 3: ownership.Ownership.AccessControl.collaborators:type_name -> ownership.Ownership.AccessControl.CollaboratorsEntry
	2, // 4: ownership.Ownership.AccessControl.public:type_name -> ownership.Ownership.PublicAccessControl
	0, // 5: ownership.Ownership.AccessControl.GroupsEntry.value:type_name -> ownership.Ownership.AccessType
	0, // 6: ownership.Ownership.AccessControl.CollaboratorsEntry.value:type_name -> ownership.Ownership.AccessType
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_ownership_proto_init() }
func file_ownership_proto_init() {
	if File_ownership_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ownership_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ownership); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ownership_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ownership_PublicAccessControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ownership_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ownership_AccessControl); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ownership_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ownership_proto_goTypes,
		DependencyIndexes: file_ownership_proto_depIdxs,
		EnumInfos:         file_ownership_proto_enumTypes,
		MessageInfos:      file_ownership_proto_msgTypes,
	}.Build()
	File_ownership_proto = out.File
	file_ownership_proto_rawDesc = nil
	file_ownership_proto_goTypes = nil
	file_ownership_proto_depIdxs = nil
}
